---
- name: Clonando MVs. Ovejas con dos interfaces. Debian
  hosts: localhost
  gather_facts: false

  vars_files:
    - alu0101225562ull.yaml

  vars:
    ssh_keys: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8dUcTjrGHN1MYT2SvPe6JlmY7R8cw3glMEkGM3TNwOQEEWGkGPSy/9YXDENozK8Yc2WQRzYw0yWaOfAVUBKJSvGztRxh6kQGgM7Jv3hPvpq6f+m2FHAo8pkJXHYWJe/0Z+mp8tKYSBB5Gijvkfym4NXG5Pr4jyF2WgaxPZ+I2m1lOI+lNtTS9EXGN/hWFS2bBQQJ2+jHmnU6gZRt3I9IKSTkCP6BFoDRIJLaJ4QYDCU3/RroYcyENHZwj1Bo89xVQDj8CFK2G0nwPKlAtvMqjviKad978bKUR8LulnnothmNevJnflLyS4jybJv8JXhpPrDMkQ16q3BsZ8/t2NOC8D6FpMHYkdQAT42gnsWgulV/yVeiOtYjs+yhbDCUk7ft/55kWVtW0YJZdmFV2cCsfrd6fGnnl+15lZ3lQZ3O+i4TEeSrjieJOUIQwDayi2RFoYQ/OSE60vmSZ5y4/0wMhkOQ3IfSal/r0MrCfHthH4ETJ7RYSY7bkNEGRAlAwRRc= usuario@ubuntu
# Usuario IaaS (cambiar vblanco por aluxxx...)

    ovirt_login: alu0101225562@ULL

# Nodos a crear (en este caso dos ovejas)

    prefix: AITS-Alejandro

# Nodos a crear (en este caso dos ovejas)

    nodes:
      - name: ansible

# Especifiquen aqui el perfil de la red privada
# que tienen asignada

    node_nics: 
      - name: nic4
        profile_name: DOCP2P-4023

# Tareas
# ------

  tasks:
    - name: Login to IaaS
      ovirt_auth:
        url: https://iaas.ull.es/ovirt-engine/api
        insecure: yes
        username: "{{ ovirt_login }}"
        password: "{{ ovirt_password }}"
        headers:
          filter: true

    - name: Create a VM
      ovirt_vm:
        auth: "{{ ovirt_auth }}"
        cluster: Cluster-Rojo
        name: "{{ prefix }}-{{ item.name }}"
        template: debian-10-sinred-cloudinit
        nics: "{{ node_nics }}"
        state: present
        wait: yes
      with_items: "{{ nodes }}"
    
    - name: Update VM via cloud-init
      ovirt_vm:
        auth: "{{ ovirt_auth }}"
        name: "{{ prefix }}-{{ item.name }}"
        state: running
        cloud_init_nics:
          - nic_name: ens3
            nic_boot_protocol: dhcp
            nic_on_boot: yes
        cloud_init:
          host_name: "{{ item.name }}"
          user_name: ansible

# Passwd generado con mkpasswd -m SHA-512 alumno2020
# La clave en claro es: alumno2020
          root_password: $6$3diC789eX$WZPkCdIrIm11cbZyhx/uwsydqgqEb1hsBvOXIF31ngjqxYhGyXMdaHZrwsf8vZHqEBoqPoXhWANPR/itAEU7l.

          authorized_ssh_keys: "{{ ssh_keys }}"
          custom_script: |
            write_files:
              - path: /etc/sudoers.d/ansible
                permissions: '0644'
                content: |
                  ansible ALL=(ALL) NOPASSWD:ALL
              - path: /tmp/saludos.txt
                permissions: '0644'
                content: |
                  "Que pasa pisha"
            runcmd:
              - sed -i '/AllowUsers/c\AllowUsers adminstic usuario soporteiass ansible hadoop' /etc/ssh/sshd_config
              - systemctl restart sshd
        wait: yes
      with_items: "{{ nodes }}"

    - name: Cleanup IaaS auth token
      ovirt_auth:
        ovirt_auth: "{{ ovirt_auth }}"
        state: absent
